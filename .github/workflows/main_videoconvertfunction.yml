name: Build and deploy dotnet core app to Azure Function App - functionconvert

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'VideoConvertFunction' # Set this to the path to your Azure Function project
  DOTNET_VERSION: '6.x' # Set this to the dotnet version to use

jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_CEA796D2445349D3AAC226918B1A734A }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0EF006216DAD401F899A185B6C128DA3 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_95906493152649A3800AE0E8FCB10DC1 }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'functionconvert'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

      - name: List contents of the deployment package
        if: failure()
        run: ls -R '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
