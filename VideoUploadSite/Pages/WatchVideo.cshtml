@page "/WatchVideo/{videoId}"
@model VideoUploadSite.Pages.WatchVideoModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/videoStyles.css">
</head>
<body>

    <div>
        @*om det finns en selectedvideo, visa den*@
        @if (Model.SelectedVideo != null)
        {
            <div class="main-container">
                <div class="video-player">
                    <video poster="@Model.SelectedVideo.ThumbnailUrl" controls>
                        <source src="@Model.SelectedVideo.VideoUrl" type="video/mp4">
                        Your browser does not support the video tag.
                    </video>
                </div>

                <div class="video-details">
                    <h2>@Model.SelectedVideo.VideoTitle</h2>
                    <h5>@Model.SelectedVideo.VideoDescription</h5>
                    <button id="deleteButton" onclick="deleteVideo()">Delete Video</button>
                    <button id="editButton" onclick="editVideo()">Edit Video</button>
                </div>

                <div id="processing-status" class="processing-status" />
            </div>
        }
        else
        {
            <h6>Can't find the video</h6>
        }
    </div>

    <script src="~/js/videoStatusChecker.js"></script>
    <script>
        //hämtar id av videon
        window.videoId = '@Model.SelectedVideo.Id';
        //call till ta bort api i controllers
        function deleteVideo() {
            $.ajax({
                type: "DELETE",
                url: `/api/Videos/DeleteVideo/@Model.SelectedVideo.Id`,
                success: function (response) {
                    alert("Video successfully deleted");
                    window.location.href = '/';
                },
                error: function (xhr, status, error) {
                    alert("Failed to delete video. Please try again.");
                }
            });
        }
        //samlar ändringar och gör api call till update controller
        function editVideo() {
            var newTitle = prompt("Enter new title:", "@Model.SelectedVideo.VideoTitle");
            if (newTitle === null) { return; }

            var newDescription = prompt("Enter new description:", "@Model.SelectedVideo.VideoDescription");
            if (newDescription === null) { return; }

            var videoId = '@Model.SelectedVideo.Id';

            var data = JSON.stringify({
                title: newTitle,
                description: newDescription
            });

            fetch(`/api/Videos/EditVideo/${videoId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: data
            })
                .then(response => {
                    if (response.ok) {
                        alert("Video updated successfully.");
                        window.location.reload();
                    } else {
                        response.text().then(text => { throw new Error(text) });
                    }
                })
                .catch(error => {
                    alert("An error occurred while updating the video: " + error.message);
                });
        }

    </script>
</body>
</html>
